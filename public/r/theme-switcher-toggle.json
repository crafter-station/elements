{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "theme-switcher-toggle",
  "type": "registry:ui",
  "title": "Theme Switcher Toggle",
  "description": "Custom toggle theme switcher with sliding animation",
  "dependencies": ["next-themes"],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/default/elements/theme-switcher/toggle.tsx",
      "content": "\"use client\";\n\nimport { useEffect, useState } from \"react\";\n\nimport { MoonIcon, SunIcon } from \"lucide-react\";\nimport { useTheme } from \"next-themes\";\n\nexport function ThemeSwitcherToggle() {\n  const { theme, setTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) {\n    return (\n      <div className=\"flex items-center space-x-2\">\n        <div className=\"w-10 h-6 bg-input rounded-full animate-pulse\" />\n      </div>\n    );\n  }\n\n  const toggleTheme = () => {\n    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  const isDark = theme === \"dark\";\n\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <button\n        type=\"button\"\n        onClick={toggleTheme}\n        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 ${\n          isDark ? \"bg-primary\" : \"bg-muted\"\n        }`}\n      >\n        <span className=\"sr-only\">Toggle theme</span>\n        <span\n          className={`inline-block h-4 w-4 transform rounded-full bg-background transition duration-200 ease-in-out ${\n            isDark ? \"translate-x-6\" : \"translate-x-1\"\n          }`}\n        >\n          {isDark ? (\n            <MoonIcon className=\"h-3 w-3 text-foreground mt-0.5 ml-0.5\" />\n          ) : (\n            <SunIcon className=\"h-3 w-3 text-foreground mt-0.5 ml-0.5\" />\n          )}\n        </span>\n      </button>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/elements/theme-switcher-toggle.tsx"
    },
    {
      "path": "registry/default/elements/theme-switcher/layout.tsx",
      "content": "import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\n\nimport { ThemeProvider } from \"next-themes\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <ThemeProvider\n          attribute=\"class\"\n          defaultTheme=\"system\"\n          enableSystem\n          disableTransitionOnChange\n        >\n          {children}\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/layout.tsx"
    }
  ],
  "docs": "⚠️ Requires ThemeProvider setup! Wrap your app with <ThemeProvider> and add suppressHydrationWarning to <html>. Custom toggle with sliding animation."
}

{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "theme-switcher",
  "type": "registry:ui",
  "title": "Theme Switcher",
  "description": "A theme switcher component with animated sun/moon icons",
  "dependencies": [
    "next-themes"
  ],
  "registryDependencies": [
    "switch"
  ],
  "files": [
    {
      "path": "registry/default/elements/theme-switcher/theme-switcher.tsx",
      "content": "\"use client\";\n\nimport { useTheme } from \"next-themes\";\nimport { useEffect, useState } from \"react\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { MoonIcon, SunIcon } from \"lucide-react\";\n\nexport function ThemeSwitcherElement() {\n  const { theme, setTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) {\n    return (\n      <div className=\"border-2 border-dashed border-foreground/50 p-3 rounded-md\">\n        <div className=\"h-[1.15rem] w-8 bg-input rounded-full border shadow-xs animate-pulse\" />\n      </div>\n    );\n  }\n\n  const toggleTheme = () => {\n    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  const isDark = theme === \"dark\";\n\n  return (\n    <div className=\"relative h-[1.15rem] w-8\">\n      <Switch\n        checked={isDark}\n        onCheckedChange={toggleTheme}\n        className=\"data-[state=checked]:bg-secondary absolute inset-0\"\n      />\n\n      {/* Sun icon - positioned on the left side */}\n      <div\n        className={`absolute left-0 top-0 h-full w-4 flex items-center justify-center transition-opacity duration-200 pointer-events-none ${\n          isDark ? \"opacity-0\" : \"opacity-100\"\n        }`}\n      >\n        <SunIcon className=\"text-foreground\" />\n      </div>\n\n      {/* Moon icon - positioned on the right side */}\n      <div\n        className={`absolute right-0 top-0 h-full w-4 flex items-center justify-center transition-opacity duration-200 pointer-events-none ${\n          isDark ? \"opacity-100\" : \"opacity-0\"\n        }`}\n      >\n        <MoonIcon className=\"text-foreground\" />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/elements/theme-switcher.tsx"
    },
    {
      "path": "registry/default/elements/theme-switcher/page.tsx",
      "content": "import { ThemeProvider } from \"next-themes\";\nimport { ThemeSwitcherElement } from \"@/components/elements/theme-switcher\";\n\nexport default function ThemeSwitcherTestPage() {\n  return (\n    <ThemeProvider attribute=\"class\" defaultTheme=\"system\" enableSystem>\n      <div className=\"min-h-screen flex items-center justify-center p-4\">\n        <div className=\"w-full max-w-md space-y-6\">\n          <div className=\"text-center space-y-2\">\n            <h1 className=\"text-2xl font-bold\">Theme Switcher Test</h1>\n            <p className=\"text-muted-foreground\">\n              Test your theme switcher element with dark/light mode\n            </p>\n          </div>\n\n          <div className=\"flex justify-center\">\n            <ThemeSwitcherElement />\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-xs text-muted-foreground\">\n              Toggle between light and dark themes\n            </p>\n          </div>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/elements/theme-switcher/page.tsx"
    }
  ],
  "docs": "To use this component:\n\n1. Install next-themes: npm install next-themes\n2. Wrap your app with ThemeProvider from next-themes\n3. Set up your CSS variables for light/dark themes\n\nThe theme switcher automatically handles light/dark mode with smooth transitions and animated icons."
}
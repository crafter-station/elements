{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "theme-switcher-switch",
  "type": "registry:ui",
  "title": "Theme Switcher Switch",
  "description": "Switch-based theme switcher with animated sun/moon icons",
  "dependencies": [
    "next-themes"
  ],
  "registryDependencies": [
    "switch"
  ],
  "files": [
    {
      "path": "registry/default/elements/theme-switcher/switch.tsx",
      "content": "\"use client\";\n\nimport { useTheme } from \"next-themes\";\nimport { useEffect, useState } from \"react\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { MoonIcon, SunIcon } from \"lucide-react\";\n\nexport function ThemeSwitcherSwitch() {\n  const { theme, setTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) {\n    return (\n      <div className=\"flex justify-center items-center\">\n        <div className=\"h-[1.15rem] w-8 bg-input rounded-full border shadow-xs animate-pulse\" />\n      </div>\n    );\n  }\n\n  const toggleTheme = () => {\n    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  const isDark = theme === \"dark\";\n\n  return (\n    <div className=\"flex justify-center items-center\">\n      <div className=\"relative h-[1.15rem] w-8\">\n        <Switch\n          checked={isDark}\n          onCheckedChange={toggleTheme}\n          className=\"data-[state=checked]:bg-secondary absolute inset-0\"\n        />\n\n        {/* Sun icon - positioned on the left side */}\n        <div\n          className={`absolute left-0 top-0 h-full w-4 flex items-center justify-center transition-opacity duration-200 pointer-events-none ${\n            isDark ? \"opacity-0\" : \"opacity-100\"\n          }`}\n        >\n          <SunIcon className=\"w-3 h-3 text-foreground\" />\n        </div>\n\n        {/* Moon icon - positioned on the right side */}\n        <div\n          className={`absolute right-0 top-0 h-full w-4 flex items-center justify-center transition-opacity duration-200 pointer-events-none ${\n            isDark ? \"opacity-100\" : \"opacity-0\"\n          }`}\n        >\n          <MoonIcon className=\"w-3 h-3 text-foreground\" />\n        </div>\n      </div>\n    </div>\n  );\n}",
      "type": "registry:component",
      "target": "components/elements/theme-switcher-switch.tsx"
    },
    {
      "path": "registry/default/elements/theme-switcher/layout.tsx",
      "content": "import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport { ThemeProvider } from \"next-themes\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <ThemeProvider\n          attribute=\"class\"\n          defaultTheme=\"system\"\n          enableSystem\n          disableTransitionOnChange\n        >\n          {children}\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/layout.tsx"
    }
  ],
  "docs": "⚠️ Requires ThemeProvider setup! Wrap your app with <ThemeProvider> and add suppressHydrationWarning to <html>. Switch-based theme switcher with animated icons."
}
{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "polar-sponsorship",
  "type": "registry:block",
  "title": "Polar Sponsorship Suite",
  "description": "Complete sponsorship integration with Polar.sh - sponsorship tiers, checkout flow, and API integration",
  "dependencies": ["@polar-sh/nextjs"],
  "registryDependencies": ["button", "badge", "card", "@elements/polar-logo"],
  "files": [
    {
      "path": "registry/default/elements/polar/sponsorship/sponsor-tiers.tsx",
      "content": "\"use client\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface SponsorTier {\n  name: string;\n  price: number;\n  description: string;\n  perks: string[];\n  popular?: boolean;\n  isHighlight?: boolean;\n  isFlexible?: boolean;\n  isOneTime?: boolean;\n}\n\ninterface SponsorTiersProps {\n  tiers: SponsorTier[];\n  onSponsor: (tierName: string) => void;\n  selectedTier?: string | null;\n  onTierSelect: (tierName: string) => void;\n  isPending?: boolean;\n  className?: string;\n}\n\nexport function SponsorTiers({\n  tiers,\n  onSponsor,\n  selectedTier,\n  onTierSelect,\n  isPending = false,\n  className,\n}: SponsorTiersProps) {\n  return (\n    <div className={className}>\n      <div className=\"space-y-8\">\n        <div className=\"grid gap-4 place-items-center grid-cols-1 md:grid-cols-2 lg:grid-cols-4\">\n          {tiers.map((tier) => (\n            <button\n              key={tier.name}\n              type=\"button\"\n              className={`relative flex h-full w-full flex-col justify-between border border-border p-6 text-sm hover:border-foreground/20 transition-all duration-200 group cursor-pointer ${\n                selectedTier === tier.name\n                  ? \"bg-primary/5 border-primary\"\n                  : tier.isHighlight\n                    ? \"bg-red-500/5 border-red-500/20\"\n                    : \"bg-card/30\"\n              }`}\n              onClick={() => onTierSelect(tier.name)}\n              aria-label={`Select ${tier.name} sponsorship tier`}\n            >\n              {/* Corner decorations */}\n              <div className=\"absolute top-0 left-0 w-2 h-2 bg-border\"></div>\n              <div className=\"absolute top-0 right-0 w-2 h-2 bg-border\"></div>\n              <div className=\"absolute bottom-0 left-0 w-2 h-2 bg-border\"></div>\n              <div className=\"absolute bottom-0 right-0 w-2 h-2 bg-border\"></div>\n\n              {tier.popular && (\n                <Badge className=\"absolute -top-3 left-1/2 -translate-x-1/2 bg-primary text-primary-foreground\">\n                  Most Popular\n                </Badge>\n              )}\n              {tier.isHighlight && (\n                <Badge className=\"absolute -top-3 left-1/2 -translate-x-1/2 bg-red-500 text-white flex items-center gap-1\">\n                  Dream Tier\n                </Badge>\n              )}\n\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center justify-center w-10 h-10 bg-muted group-hover:bg-muted/80 transition-colors\">\n                    <svg\n                      className=\"size-5\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"currentColor\"\n                      aria-label=\"Heart icon\"\n                      role=\"img\"\n                    >\n                      <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\" />\n                    </svg>\n                  </div>\n                  <Badge\n                    variant={tier.popular ? \"default\" : \"secondary\"}\n                    className=\"text-xs\"\n                  >\n                    {tier.name}\n                  </Badge>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"text-2xl font-bold\">\n                    <span className=\"text-base\">\n                      ${tier.price}+{\" \"}\n                      <span className=\"text-xs font-normal text-muted-foreground\">\n                        {tier.isOneTime ? \"minimum/once\" : \"minimum/mo\"}\n                      </span>\n                    </span>\n                  </div>\n                  <p className=\"text-xs text-muted-foreground leading-relaxed\">\n                    {tier.description}\n                  </p>\n                </div>\n\n                <ul className=\"space-y-2 text-xs\">\n                  {tier.perks.map((perk, index) => (\n                    <li\n                      key={`${tier.name}-perk-${index}`}\n                      className=\"flex items-start gap-2\"\n                    >\n                      <div className=\"size-1 bg-primary flex-shrink-0 mt-1.5\" />\n                      {perk}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n\n              <div className=\"mt-4\">\n                <div className=\"my-2 h-[1px] w-full bg-border\"></div>\n                <div className=\"flex items-center justify-between\">\n                  <Badge variant=\"outline\" className=\"text-xs\">\n                    {tier.isOneTime ? \"Donation\" : \"Sponsorship\"}\n                  </Badge>\n                  <span className=\"text-xs text-muted-foreground\">\n                    {tier.isOneTime ? \"One-time\" : \"Monthly\"}\n                  </span>\n                </div>\n              </div>\n            </button>\n          ))}\n        </div>\n\n        <div className=\"text-center space-y-4\">\n          <Button\n            size=\"lg\"\n            className=\"h-14 px-8 text-lg gap-2\"\n            disabled={!selectedTier || isPending}\n            onClick={() => selectedTier && onSponsor(selectedTier)}\n          >\n            <svg\n              className=\"size-5\"\n              viewBox=\"0 0 24 24\"\n              fill=\"currentColor\"\n              aria-label=\"Heart icon\"\n              role=\"img\"\n            >\n              <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\" />\n            </svg>\n            {isPending\n              ? \"Creating checkout...\"\n              : selectedTier\n                ? `Sponsor with ${selectedTier}`\n                : \"Select a tier\"}\n          </Button>\n          <p className=\"text-sm text-muted-foreground\">\n            Need a custom tier?{\" \"}\n            <a\n              href=\"mailto:hello@yourdomain.com?subject=Custom Sponsorship\"\n              className=\"underline hover:text-foreground\"\n            >\n              Contact us\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/elements/polar/sponsor-tiers.tsx"
    },
    {
      "path": "registry/default/elements/polar/sponsorship/current-sponsors.tsx",
      "content": "import { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface Sponsor {\n  name: string;\n  tier: string;\n  url: string;\n  logo: React.ReactNode;\n}\n\ninterface CurrentSponsorsProps {\n  sponsors: Sponsor[];\n  onChooseTier?: () => void;\n  className?: string;\n}\n\nexport function CurrentSponsors({\n  sponsors,\n  onChooseTier,\n  className,\n}: CurrentSponsorsProps) {\n  return (\n    <div className={className}>\n      <div className=\"space-y-0\">\n        <div className=\"px-8 py-16 text-center space-y-8\">\n          <div className=\"space-y-2\">\n            <h2 className=\"font-dotted font-black text-4xl lg:text-6xl\">\n              Current Sponsors\n            </h2>\n            <p className=\"text-muted-foreground text-lg\">\n              Join these amazing sponsors supporting open source development\n            </p>\n          </div>\n        </div>\n\n        {/* Three Column Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3\">\n          {sponsors.map((sponsor) => (\n            <a\n              key={`${sponsor.name}-${sponsor.tier}`}\n              href={sponsor.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center justify-center border-t border-r md:border-r border-border border-dotted bg-card/30 hover:bg-accent/20 transition-all duration-300 group\"\n            >\n              <div className=\"flex flex-col items-center justify-center min-h-[200px] px-6 py-12 space-y-4\">\n                <div className=\"opacity-80 group-hover:opacity-100 transition-opacity duration-300\">\n                  {sponsor.logo}\n                </div>\n                <div className=\"text-center space-y-1\">\n                  <h4 className=\"text-2xl uppercase font-black font-dotted text-foreground group-hover:text-primary transition-colors\">\n                    {sponsor.name}\n                  </h4>\n                  <Badge variant=\"secondary\" className=\"text-xs\">\n                    {sponsor.tier}\n                  </Badge>\n                </div>\n              </div>\n            </a>\n          ))}\n\n          {/* \"It Can Be You\" slot */}\n          <div className=\"flex items-center justify-center border-t border-l md:border-l-0 border-border border-dotted bg-card/30\">\n            <div className=\"flex flex-col items-center justify-center min-h-[200px] px-6 py-12 space-y-4\">\n              <svg\n                className=\"h-12 w-12 text-red-500 opacity-80\"\n                viewBox=\"0 0 24 24\"\n                fill=\"currentColor\"\n                aria-label=\"Heart icon\"\n                role=\"img\"\n              >\n                <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\" />\n              </svg>\n              <div className=\"text-center space-y-2\">\n                <h4 className=\"text-sm font-medium text-foreground\">\n                  It Can Be You\n                </h4>\n                <div className=\"space-y-3 text-xs text-muted-foreground\">\n                  <p>Ready to sponsor this project?</p>\n                  {onChooseTier && (\n                    <Button\n                      size=\"sm\"\n                      onClick={onChooseTier}\n                      className=\"text-xs font-medium\"\n                    >\n                      Choose Your Tier\n                    </Button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/elements/polar/current-sponsors.tsx"
    },
    {
      "path": "registry/default/elements/polar/sponsorship/checkout-route.ts",
      "content": "import { Checkout } from \"@polar-sh/nextjs\";\n\nexport const GET = Checkout({\n  accessToken: process.env.POLAR_ACCESS_TOKEN || \"\",\n  successUrl: process.env.POLAR_SUCCESS_URL || \"\",\n  server: \"production\", // Use \"sandbox\" for testing - change to \"production\" when ready\n  theme: \"dark\",\n});\n",
      "type": "registry:lib",
      "target": "app/api/checkout/route.ts"
    },
    {
      "path": "registry/default/elements/polar/sponsorship/polar-lib.ts",
      "content": "\"use server\";\n\n// Polar.sh integration for sponsorship\n// Simple approach using the Polar NextJS adapter\n\n// Optional: Advanced Polar API integration types (for reference only)\ninterface PolarCheckoutItem {\n  type: \"product\";\n  product_id: string;\n  product_price_id?: string;\n  quantity?: number;\n}\n\ninterface PolarCheckoutSession {\n  payment_processor: \"stripe\";\n  success_url: string;\n  items: PolarCheckoutItem[];\n  customer_email?: string;\n  customer_name?: string;\n  custom_fields?: Record<string, unknown>;\n  allow_discount_codes?: boolean;\n  metadata?: Record<string, string>;\n}\n\n// Update these with your actual Polar product IDs from your dashboard\n// Get these from https://polar.sh/dashboard -> Products -> [Product Name] -> Product ID\nconst POLAR_PRODUCT_IDS = {\n  \"Tip Jar\": \"your_tip_jar_product_id_here\",\n  Supporter: \"your_supporter_product_id_here\",\n  Sponsor: \"your_sponsor_product_id_here\",\n  Backer: \"your_backer_product_id_here\",\n};\n\n// Optional: Advanced server-side checkout creation (if you need more control)\nexport async function createPolarCheckout(\n  tierName: string,\n  customAmount?: number,\n) {\n  const POLAR_ACCESS_TOKEN = process.env.POLAR_ACCESS_TOKEN;\n  const POLAR_BASE_URL = process.env.POLAR_BASE_URL || \"https://api.polar.sh\";\n\n  if (!POLAR_ACCESS_TOKEN) {\n    throw new Error(\"Polar access token not configured\");\n  }\n\n  const productId =\n    POLAR_PRODUCT_IDS[tierName as keyof typeof POLAR_PRODUCT_IDS];\n\n  if (!productId) {\n    throw new Error(`Unknown tier: ${tierName}`);\n  }\n\n  const checkoutData: PolarCheckoutSession = {\n    payment_processor: \"stripe\",\n    success_url: process.env.POLAR_SUCCESS_URL || \"\",\n    items: [\n      {\n        type: \"product\",\n        product_id: productId,\n        quantity: 1,\n      },\n    ],\n    allow_discount_codes: true,\n    metadata: {\n      tier: tierName,\n      source: \"website-sponsorship\",\n      ...(customAmount && { custom_amount: customAmount.toString() }),\n    },\n  };\n\n  try {\n    const response = await fetch(`${POLAR_BASE_URL}/v1/checkouts/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${POLAR_ACCESS_TOKEN}`,\n      },\n      body: JSON.stringify(checkoutData),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      console.error(\"Polar API Error:\", errorData);\n      throw new Error(`Polar API Error: ${response.status}`);\n    }\n\n    const session = await response.json();\n    return { url: session.url, sessionId: session.id };\n  } catch (error) {\n    console.error(\"Failed to create Polar checkout:\", error);\n    throw new Error(\"Failed to create checkout session\");\n  }\n}\n",
      "type": "registry:lib",
      "target": "lib/polar.ts"
    },
    {
      "path": "registry/default/elements/polar/sponsorship/sponsor-lib.ts",
      "content": "// Example sponsor data - replace with your actual sponsors\nexport interface Sponsor {\n  name: string;\n  tier: string;\n  url: string;\n  logo: React.ReactNode;\n}\n\n// Example sponsors - replace with your actual sponsors\nexport const currentSponsors: Sponsor[] = [\n  // Add your sponsors here\n  // {\n  //   name: \"Company Name\",\n  //   tier: \"Sponsor\",\n  //   url: \"https://company.com\",\n  //   logo: <CompanyLogo className=\"h-8 w-auto\" />\n  // }\n];\n\n// Default sponsor tiers - customize as needed\nexport interface SponsorTier {\n  name: string;\n  price: number;\n  description: string;\n  perks: string[];\n  popular?: boolean;\n  isHighlight?: boolean;\n  isFlexible?: boolean;\n  isOneTime?: boolean;\n}\n\nexport const defaultSponsorTiers: SponsorTier[] = [\n  {\n    name: \"Tip Jar\",\n    price: 3,\n    description: \"One-time thank you\",\n    perks: [\"Good karma\", \"My eternal gratitude\", \"Warm fuzzy feeling\"],\n    popular: false,\n    isFlexible: true,\n    isOneTime: true,\n  },\n  {\n    name: \"Supporter\",\n    price: 15,\n    description: \"Monthly support\",\n    perks: [\"Name in credits\", \"Progress updates\", \"Feel good vibes\"],\n    popular: true,\n    isFlexible: true,\n  },\n  {\n    name: \"Sponsor\",\n    price: 75,\n    description: \"Serious support\",\n    perks: [\n      \"Logo on sponsor wall\",\n      \"Priority feature requests\",\n      \"Direct feedback line\",\n    ],\n    popular: false,\n    isFlexible: true,\n  },\n  {\n    name: \"Backer\",\n    price: 300,\n    description: \"Make me work full-time on open source\",\n    perks: [\n      \"Everything above\",\n      \"Custom feature requests\",\n      \"Monthly calls\",\n      \"I'll probably cry (happy tears)\",\n    ],\n    popular: false,\n    isHighlight: true,\n    isFlexible: true,\n  },\n];\n",
      "type": "registry:lib",
      "target": "lib/sponsors.ts"
    },
    {
      "path": "registry/default/elements/polar/sponsorship/sponsorship-page.tsx",
      "content": "\"use client\";\n\nimport { useState, useTransition } from \"react\";\n\nimport { CurrentSponsors } from \"./current-sponsors\";\nimport { SponsorTiers } from \"./sponsor-tiers\";\n\ninterface SponsorTier {\n  name: string;\n  price: number;\n  description: string;\n  perks: string[];\n  popular?: boolean;\n  isHighlight?: boolean;\n  isFlexible?: boolean;\n  isOneTime?: boolean;\n}\n\ninterface Sponsor {\n  name: string;\n  tier: string;\n  url: string;\n  logo: React.ReactNode;\n}\n\ninterface SponsorshipPageProps {\n  title?: string;\n  subtitle?: string;\n  tiers: SponsorTier[];\n  sponsors: Sponsor[];\n  onSponsor: (tierName: string) => Promise<void> | void;\n  className?: string;\n  children?: React.ReactNode;\n}\n\nexport function SponsorshipPage({\n  title = \"Sponsor This Project\",\n  subtitle = \"Support open source development\",\n  tiers,\n  sponsors,\n  onSponsor,\n  className,\n  children,\n}: SponsorshipPageProps) {\n  const [selectedTier, setSelectedTier] = useState<string | null>(null);\n  const [isPending, startTransition] = useTransition();\n\n  const handleChooseYourTier = () => {\n    const sponsorTiersSection = document.getElementById(\"sponsor-tiers\");\n    if (sponsorTiersSection) {\n      sponsorTiersSection.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\",\n      });\n    }\n    // Select the popular tier by default\n    const popularTier = tiers.find((tier) => tier.popular);\n    if (popularTier) {\n      setSelectedTier(popularTier.name);\n    }\n  };\n\n  const handleSponsor = (tierName: string) => {\n    startTransition(async () => {\n      try {\n        await onSponsor(tierName);\n      } catch (error) {\n        console.error(\"Failed to create checkout:\", error);\n        alert(\"Failed to create checkout. Please try again.\");\n      }\n    });\n  };\n\n  return (\n    <div className={className}>\n      {/* Hero Section */}\n      <div className=\"relative overflow-hidden\">\n        <div className=\"w-full pt-12 px-8 lg:px-16\">\n          <div className=\"text-center max-w-4xl mx-auto space-y-8\">\n            <div className=\"space-y-6\">\n              <div className=\"text-lg uppercase tracking-[0.2em] font-mono text-primary/70\">\n                [SUPPORT US]\n              </div>\n              <h1 className=\"font-dotted font-black text-5xl lg:text-7xl leading-tight tracking-tight\">\n                {title}\n              </h1>\n              <p className=\"text-muted-foreground text-md lg:text-lg leading-relaxed max-w-2xl mx-auto\">\n                {subtitle}\n              </p>\n            </div>\n\n            <div className=\"flex justify-center gap-6 text-sm text-muted-foreground\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"size-2 bg-primary\" />\n                <span>Backed by {sponsors.length} sponsors</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <div className=\"size-2 bg-primary\" />\n                <span>Reaching 10K+ developers</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Custom content */}\n      {children}\n\n      {/* Sponsor Tiers */}\n      <div\n        id=\"sponsor-tiers\"\n        className=\"w-full border-border border-dotted px-8 py-12\"\n      >\n        <SponsorTiers\n          tiers={tiers}\n          onSponsor={handleSponsor}\n          selectedTier={selectedTier}\n          onTierSelect={setSelectedTier}\n          isPending={isPending}\n        />\n      </div>\n\n      {/* Current Sponsors */}\n      <div className=\"w-full border-t border-border border-dotted\">\n        <CurrentSponsors\n          sponsors={sponsors}\n          onChooseTier={handleChooseYourTier}\n        />\n      </div>\n\n      {/* Benefits Section */}\n      <div className=\"w-full border-t border-border border-dotted px-8 py-16\">\n        <div className=\"max-w-4xl mx-auto text-center space-y-12\">\n          <h2 className=\"font-dotted font-black text-4xl lg:text-6xl\">\n            Why Sponsor?\n          </h2>\n\n          <div className=\"grid gap-8 md:gap-12 md:grid-cols-3\">\n            <div className=\"space-y-4\">\n              <div className=\"mx-auto flex size-12 items-center justify-center bg-primary/10\">\n                <svg\n                  className=\"size-6 text-primary\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  aria-label=\"Code brackets icon\"\n                  role=\"img\"\n                >\n                  <polyline points=\"16,18 22,12 16,6\" />\n                  <polyline points=\"8,6 2,12 8,18\" />\n                </svg>\n              </div>\n              <h3 className=\"text-xl font-semibold\">Keep Development Active</h3>\n              <p className=\"text-muted-foreground text-sm\">\n                More time building features, less time worrying about\n                sustainability.\n              </p>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"mx-auto flex size-12 items-center justify-center bg-primary/10\">\n                <svg\n                  className=\"size-6 text-primary\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  aria-label=\"Target icon\"\n                  role=\"img\"\n                >\n                  <circle cx=\"12\" cy=\"12\" r=\"3\" />\n                  <path d=\"M12 1v6m0 6v6m11-7h-6m-6 0H1\" />\n                </svg>\n              </div>\n              <h3 className=\"text-xl font-semibold\">Vote on Features</h3>\n              <p className=\"text-muted-foreground text-sm\">\n                Help prioritize features and improvements that matter to you.\n              </p>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div className=\"mx-auto flex size-12 items-center justify-center bg-primary/10\">\n                <svg\n                  className=\"size-6 text-primary\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  aria-label=\"Checkmark icon\"\n                  role=\"img\"\n                >\n                  <path d=\"M20 6 9 17l-5-5\" />\n                </svg>\n              </div>\n              <h3 className=\"text-xl font-semibold\">Good Vibes</h3>\n              <p className=\"text-muted-foreground text-sm\">\n                Support open source and feel good about making development\n                easier.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/sponsor/page.tsx"
    },
    {
      "path": "registry/default/elements/polar/sponsorship/success-page.tsx",
      "content": "\"use client\";\n\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport { useEffect, useState } from \"react\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface CheckoutData {\n  id: string;\n  status: string;\n  amount: number;\n  currency: string;\n  product_name?: string;\n  customer_email?: string;\n}\n\nexport default function SuccessPage() {\n  const searchParams = useSearchParams();\n  const router = useRouter();\n  const [checkoutData, setCheckoutData] = useState<CheckoutData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const checkoutId = searchParams.get(\"checkout_id\");\n\n  useEffect(() => {\n    if (checkoutId) {\n      // You can optionally fetch checkout details from Polar API here\n      // For now, we'll just show a generic success message\n      setCheckoutData({\n        id: checkoutId,\n        status: \"completed\",\n        amount: 0,\n        currency: \"USD\",\n      });\n    }\n    setIsLoading(false);\n  }, [checkoutId]);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto\"></div>\n          <p className=\"text-muted-foreground\">\n            Processing your sponsorship...\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!checkoutId) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center space-y-6 max-w-md\">\n          <div className=\"space-y-2\">\n            <h1 className=\"text-2xl font-bold text-destructive\">\n              Invalid Access\n            </h1>\n            <p className=\"text-muted-foreground\">\n              This page can only be accessed after a successful sponsorship\n              checkout.\n            </p>\n          </div>\n          <Button onClick={() => router.push(\"/sponsor\")}>\n            Go to Sponsorship Page\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-green-50 to-blue-50 dark:from-green-950/20 dark:to-blue-950/20\">\n      <div className=\"text-center space-y-8 max-w-2xl mx-auto px-6\">\n        {/* Success Icon */}\n        <div className=\"mx-auto flex items-center justify-center w-16 h-16 bg-green-100 dark:bg-green-900/30 rounded-full\">\n          <svg\n            className=\"w-8 h-8 text-green-600 dark:text-green-400\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            aria-label=\"Success checkmark\"\n            role=\"img\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M5 13l4 4L19 7\"\n            />\n          </svg>\n        </div>\n\n        {/* Success Message */}\n        <div className=\"space-y-4\">\n          <h1 className=\"text-4xl font-bold text-green-600 dark:text-green-400\">\n            Thank You! 🎉\n          </h1>\n          <p className=\"text-xl text-muted-foreground\">\n            Your sponsorship means the world to us!\n          </p>\n          <p className=\"text-muted-foreground max-w-lg mx-auto\">\n            We've received your sponsorship and you'll get a confirmation email\n            shortly. Your support helps us continue building amazing open source\n            tools.\n          </p>\n        </div>\n\n        {/* Checkout Details */}\n        {checkoutData && (\n          <div className=\"bg-card border rounded-lg p-6 text-left\">\n            <h3 className=\"font-semibold mb-3\">Sponsorship Details</h3>\n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-muted-foreground\">Checkout ID:</span>\n                <Badge variant=\"outline\" className=\"font-mono text-xs\">\n                  {checkoutData.id}\n                </Badge>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-muted-foreground\">Status:</span>\n                <Badge variant=\"default\" className=\"text-xs\">\n                  ✅ {checkoutData.status}\n                </Badge>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* What's Next */}\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold\">What's Next?</h3>\n          <div className=\"text-sm text-muted-foreground space-y-2\">\n            <p>\n              📧 Check your email for a receipt and sponsorship confirmation\n            </p>\n            <p>🚀 You'll be added to our sponsors page within 24 hours</p>\n            <p>💬 Feel free to reach out if you have any questions</p>\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n          <Button onClick={() => router.push(\"/\")} variant=\"default\">\n            Back to Home\n          </Button>\n          <Button onClick={() => router.push(\"/sponsor\")} variant=\"outline\">\n            View Sponsorship Page\n          </Button>\n        </div>\n\n        {/* Contact */}\n        <p className=\"text-xs text-muted-foreground\">\n          Questions? Contact us at{\" \"}\n          <a\n            href=\"mailto:hello@yourdomain.com\"\n            className=\"underline hover:text-foreground\"\n          >\n            hello@yourdomain.com\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/success/page.tsx"
    }
  ],
  "envVars": {
    "POLAR_ACCESS_TOKEN": "polar_oat_...",
    "POLAR_SUCCESS_URL": "https://yourdomain.com/success?checkout_id={CHECKOUT_ID}",
    "POLAR_BASE_URL": "https://api.polar.sh"
  },
  "docs": "Complete Polar.sh sponsorship suite with tiers, checkout, and sponsor display. Set up products in Polar dashboard, update POLAR_PRODUCT_IDS in lib/polar.ts with your product IDs, and configure environment variables. Includes API routes, sponsor components, and checkout integration."
}

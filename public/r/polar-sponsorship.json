{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "polar-sponsorship",
  "type": "registry:block",
  "title": "Polar Sponsorship Suite",
  "description": "Complete sponsorship integration with Polar.sh - sponsorship tiers, checkout flow, and API integration",
  "dependencies": ["@polar-sh/nextjs"],
  "registryDependencies": ["button", "badge", "card", "@elements/polar-logo"],
  "files": [
    {
      "path": "registry/default/elements/polar/sponsorship/sponsor-tiers.tsx",
      "content": "\"use client\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface SponsorTier {\n  name: string;\n  price: number;\n  description: string;\n  perks: string[];\n  popular?: boolean;\n  isHighlight?: boolean;\n  isFlexible?: boolean;\n  isOneTime?: boolean;\n}\n\ninterface SponsorTiersProps {\n  tiers: SponsorTier[];\n  onSponsor: (tierName: string) => void;\n  selectedTier?: string | null;\n  onTierSelect: (tierName: string) => void;\n  isPending?: boolean;\n  className?: string;\n}\n\nexport function SponsorTiers({\n  tiers,\n  onSponsor,\n  selectedTier,\n  onTierSelect,\n  isPending = false,\n  className,\n}: SponsorTiersProps) {\n  return (\n    <div className={className}>\n      <div className=\"space-y-8 max-w-6xl mx-auto\">\n        <div className=\"grid gap-6 grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\n          {tiers.map((tier) => (\n            <button\n              key={tier.name}\n              type=\"button\"\n              className={`relative flex h-full w-full flex-col justify-between rounded-lg border p-6 text-sm hover:border-primary/50 transition-all duration-200 group cursor-pointer ${\n                selectedTier === tier.name\n                  ? \"bg-primary/5 border-primary ring-2 ring-primary/20\"\n                  : tier.isHighlight\n                    ? \"bg-gradient-to-br from-primary/5 to-blue-500/5 border-primary/30\"\n                    : \"bg-card hover:bg-card/80 border-border\"\n              }`}\n              onClick={() => onTierSelect(tier.name)}\n              aria-label={`Select ${tier.name} sponsorship tier`}\n            >\n              {tier.popular && (\n                <Badge className=\"absolute -top-3 left-1/2 -translate-x-1/2 bg-primary text-primary-foreground border-0\">\n                  Most Popular\n                </Badge>\n              )}\n              {tier.isHighlight && (\n                <Badge className=\"absolute -top-3 left-1/2 -translate-x-1/2 bg-gradient-to-r from-primary to-blue-500 text-white border-0\">\n                  Recommended\n                </Badge>\n              )}\n\n              <div className=\"space-y-4 text-center\">\n                <div className=\"text-center\">\n                  <h3 className=\"text-xl font-semibold\">{tier.name}</h3>\n                </div>\n\n                <div className=\"space-y-3 text-center\">\n                  <div className=\"text-3xl font-bold\">\n                    ${tier.price}\n                    <span className=\"text-lg font-normal text-muted-foreground\">\n                      +\n                    </span>\n                    <div className=\"text-sm font-normal text-muted-foreground mt-1\">\n                      {tier.isOneTime ? \"minimum/once\" : \"minimum/mo\"}\n                    </div>\n                  </div>\n                  <p className=\"text-sm w-full text-center text-muted-foreground leading-relaxed\">\n                    {tier.description}\n                  </p>\n                </div>\n\n                <ul className=\"space-y-3 text-sm\">\n                  {tier.perks.map((perk, index) => (\n                    <li\n                      key={`${tier.name}-perk-${index}`}\n                      className=\"flex items-start gap-3\"\n                    >\n                      <svg\n                        role=\"img\"\n                        aria-label=\"Checkmark\"\n                        className=\"size-4 text-primary mt-0.5 flex-shrink-0\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M5 13l4 4L19 7\"\n                        />\n                      </svg>\n                      <span>{perk}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </button>\n          ))}\n        </div>\n\n        <div className=\"text-center space-y-4\">\n          <Button\n            size=\"lg\"\n            className=\"h-12 px-8 gap-2\"\n            disabled={!selectedTier || isPending}\n            onClick={() => selectedTier && onSponsor(selectedTier)}\n          >\n            {isPending\n              ? \"Creating checkout...\"\n              : selectedTier\n                ? `Continue with ${selectedTier}`\n                : \"Select a tier\"}\n          </Button>\n          <p className=\"text-sm text-muted-foreground\">\n            Need a custom tier?{\" \"}\n            <a href=\"#contact\" className=\"underline hover:text-foreground\">\n              Contact us\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "components/elements/polar/sponsor-tiers.tsx"
    },
    {
      "path": "registry/default/elements/polar/sponsorship/checkout-route.ts",
      "content": "import { Checkout } from \"@polar-sh/nextjs\";\n\nexport const GET = Checkout({\n  accessToken: process.env.POLAR_ACCESS_TOKEN || \"\",\n  successUrl: process.env.POLAR_SUCCESS_URL || \"\",\n  server: \"production\", // Use \"sandbox\" for testing - change to \"production\" when ready\n  theme: \"dark\",\n});\n",
      "type": "registry:lib",
      "target": "app/api/checkout/route.ts"
    },
    {
      "path": "registry/default/elements/polar/sponsorship/sponsorship-page.tsx",
      "content": "\"use client\";\n\nimport { useState, useTransition } from \"react\";\n\nimport { SponsorTiers } from \"@/components/elements/polar/sponsor-tiers\";\n\n// Example Polar Product IDs - Replace with your own product IDs\nconst EXAMPLE_POLAR_PRODUCT_IDS = {\n  \"Tip Jar\": \"714b5098-71bd-43a3-b704-b776ab9b57d3\",\n  Supporter: \"a80fbd28-adb3-48e2-9dba-ca7d19919abb\",\n  Sponsor: \"99ba3a23-8056-4532-a0ea-f378d40ac178\",\n  Backer: \"8bf45d94-2972-4bd4-b745-cd34b3bdc629\",\n};\n\ninterface SponsorTier {\n  name: string;\n  price: number;\n  description: string;\n  perks: string[];\n  popular?: boolean;\n  isHighlight?: boolean;\n  isFlexible?: boolean;\n  isOneTime?: boolean;\n}\n\ninterface SponsorshipPageProps {\n  title?: string;\n  subtitle?: string;\n  productIds?: Record<string, string>;\n  className?: string;\n  children?: React.ReactNode;\n}\n\nconst mockTiers: SponsorTier[] = [\n  {\n    name: \"Supporter\",\n    price: 10,\n    description: \"Help keep the project alive\",\n    perks: [\"Early access to updates\", \"Discord community access\"],\n  },\n  {\n    name: \"Sponsor\",\n    price: 50,\n    description: \"Help shape the project direction\",\n    perks: [\"Feature voting rights\", \"Priority support\", \"Logo in README\"],\n    popular: true,\n  },\n  {\n    name: \"Partner\",\n    price: 200,\n    description: \"Become a key partner\",\n    perks: [\n      \"Direct feature requests\",\n      \"Monthly 1:1 calls\",\n      \"Custom components\",\n    ],\n    isHighlight: true,\n  },\n];\n\nexport function SponsorshipPage({\n  title = \"Sponsor This Project\",\n  subtitle = \"Support open source development\",\n  productIds,\n  className,\n  children,\n}: SponsorshipPageProps) {\n  const [selectedTier, setSelectedTier] = useState<string | null>(null);\n  const [isPending, startTransition] = useTransition();\n\n  const handleSponsor = (tierName: string) => {\n    startTransition(() => {\n      try {\n        // Use provided product IDs or fall back to examples\n        const productIdsToUse = productIds || EXAMPLE_POLAR_PRODUCT_IDS;\n        const productId =\n          productIdsToUse[tierName as keyof typeof productIdsToUse];\n\n        if (!productId) {\n          throw new Error(`No product ID found for tier: ${tierName}`);\n        }\n\n        // Use the Polar NextJS adapter checkout route\n        const checkoutUrl = `/api/checkout?products=${productId}`;\n        window.location.href = checkoutUrl;\n      } catch (error) {\n        console.error(\"Failed to create checkout:\", error);\n        alert(\"Failed to create checkout. Please try again.\");\n      }\n    });\n  };\n\n  return (\n    <div className={className}>\n      {/* Hero Section */}\n      <div className=\"relative overflow-hidden\">\n        <div className=\"w-full pt-12 pb-8 px-4\">\n          <div className=\"text-center max-w-4xl mx-auto space-y-6\">\n            <div className=\"space-y-4\">\n              <h1 className=\"text-3xl md:text-4xl lg:text-5xl font-bold tracking-tight\">\n                {title}\n              </h1>\n              <p className=\"text-muted-foreground text-lg max-w-2xl mx-auto\">\n                {subtitle}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Custom content */}\n      {children}\n\n      {/* Sponsor Tiers */}\n      <div id=\"sponsor-tiers\" className=\"w-full px-4 py-8\">\n        <SponsorTiers\n          tiers={mockTiers}\n          onSponsor={handleSponsor}\n          selectedTier={selectedTier}\n          onTierSelect={setSelectedTier}\n          isPending={isPending}\n        />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/sponsor/page.tsx"
    },
    {
      "path": "registry/default/elements/polar/sponsorship/success-page.tsx",
      "content": "\"use client\";\n\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport { useEffect, useState } from \"react\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface CheckoutData {\n  id: string;\n  status: string;\n  amount: number;\n  currency: string;\n  product_name?: string;\n  customer_email?: string;\n}\n\nexport default function SuccessPage() {\n  const searchParams = useSearchParams();\n  const router = useRouter();\n  const [checkoutData, setCheckoutData] = useState<CheckoutData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const checkoutId = searchParams.get(\"checkout_id\");\n\n  useEffect(() => {\n    if (checkoutId) {\n      // You can optionally fetch checkout details from Polar API here\n      // For now, we'll just show a generic success message\n      setCheckoutData({\n        id: checkoutId,\n        status: \"completed\",\n        amount: 0,\n        currency: \"USD\",\n      });\n    }\n    setIsLoading(false);\n  }, [checkoutId]);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto\"></div>\n          <p className=\"text-muted-foreground\">\n            Processing your sponsorship...\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!checkoutId) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center space-y-6 max-w-md\">\n          <div className=\"space-y-2\">\n            <h1 className=\"text-2xl font-bold text-destructive\">\n              Invalid Access\n            </h1>\n            <p className=\"text-muted-foreground\">\n              This page can only be accessed after a successful sponsorship\n              checkout.\n            </p>\n          </div>\n          <Button onClick={() => router.push(\"/sponsor\")}>\n            Go to Sponsorship Page\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center px-4\">\n      <div className=\"text-center space-y-8 max-w-2xl mx-auto\">\n        {/* Success Icon */}\n        <div className=\"mx-auto flex items-center justify-center w-20 h-20 bg-primary/10 rounded-full\">\n          <svg\n            className=\"w-10 h-10 text-primary\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            aria-label=\"Success checkmark\"\n            role=\"img\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M5 13l4 4L19 7\"\n            />\n          </svg>\n        </div>\n\n        {/* Success Message */}\n        <div className=\"space-y-4\">\n          <h1 className=\"text-3xl md:text-4xl font-bold\">Thank You!</h1>\n          <p className=\"text-xl text-muted-foreground\">\n            Your sponsorship means the world to us!\n          </p>\n          <p className=\"text-muted-foreground max-w-lg mx-auto\">\n            We've received your sponsorship and you'll get a confirmation email\n            shortly. Your support helps us continue building amazing tools.\n          </p>\n        </div>\n\n        {/* Checkout Details */}\n        {checkoutData && (\n          <div className=\"bg-card border rounded-lg p-6 text-left\">\n            <h3 className=\"font-semibold mb-4\">Sponsorship Details</h3>\n            <div className=\"space-y-3 text-sm\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-muted-foreground\">Checkout ID:</span>\n                <Badge variant=\"outline\" className=\"font-mono text-xs\">\n                  {checkoutData.id}\n                </Badge>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-muted-foreground\">Status:</span>\n                <Badge variant=\"default\" className=\"text-xs\">\n                  {checkoutData.status}\n                </Badge>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* What's Next */}\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold\">What's Next?</h3>\n          <div className=\"text-sm text-muted-foreground space-y-3\">\n            <div className=\"flex items-start gap-3\">\n              <svg\n                className=\"size-4 text-primary mt-0.5 flex-shrink-0\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <title>Question Icon</title>\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M3 8l7.89 7.89a2 2 0 002.83 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                />\n              </svg>\n              <span>Check your email for a receipt and confirmation</span>\n            </div>\n            <div className=\"flex items-start gap-3\">\n              <svg\n                className=\"size-4 text-primary mt-0.5 flex-shrink-0\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <title>Question Icon</title>\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M13 10V3L4 14h7v7l9-11h-7z\"\n                />\n              </svg>\n              <span>You'll be added to our sponsors page within 24 hours</span>\n            </div>\n            <div className=\"flex items-start gap-3\">\n              <svg\n                className=\"size-4 text-primary mt-0.5 flex-shrink-0\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <title>Question Icon</title>\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                />\n              </svg>\n              <span>Feel free to reach out if you have any questions</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n          <Button onClick={() => router.push(\"/\")} variant=\"default\">\n            Back to Home\n          </Button>\n          <Button onClick={() => router.push(\"/sponsor\")} variant=\"outline\">\n            View Sponsorship Page\n          </Button>\n        </div>\n\n        {/* Contact */}\n        <p className=\"text-sm text-muted-foreground\">\n          Questions?{\" \"}\n          <a href=\"#contact\" className=\"underline hover:text-foreground\">\n            Contact us\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/success/page.tsx"
    }
  ],
  "envVars": {
    "POLAR_ACCESS_TOKEN": "polar_oat_...",
    "POLAR_SUCCESS_URL": "https://yourdomain.com/success?checkout_id={CHECKOUT_ID}",
    "POLAR_BASE_URL": "https://api.polar.sh"
  },
  "docs": "Complete Polar.sh sponsorship suite with tiers, checkout, and sponsor display. Set up products in Polar dashboard, update POLAR_PRODUCT_IDS in lib/polar.ts with your product IDs, and configure environment variables. Includes API routes, sponsor components, and checkout integration."
}

/**
 * AUTO-GENERATED FILE - DO NOT EDIT MANUALLY
 *
 * This file is automatically generated by scripts/generate-preview-map.ts
 * Run: bun run scripts/generate-preview-map.ts
 *
 * Convention-based component preview mappings:
 * - registry:ui components are previewable
 * - registry:block components with registry:component files are previewable
 * - Other types (lib, hook, etc.) are not previewable
 */

import type { ComponentType } from "react";

import * as PolarSponsorshipModule from "@/registry/polar/sponsorship/sponsor-tiers-preview";
import * as UploadthingDropzoneModule from "@/registry/uploadthing/upload-dropzone";
import * as UploadthingButtonModule from "@/registry/uploadthing/upload-button";
import * as AppleLogoModule from "@/registry/logos/apple";
import * as LinearLogoModule from "@/registry/logos/linear";
import * as MicrosoftLogoModule from "@/registry/logos/microsoft";
import * as GithubLogoModule from "@/registry/logos/github";
import * as SpotifyLogoModule from "@/registry/logos/spotify";
import * as SlackLogoModule from "@/registry/logos/slack";
import * as TwitchLogoModule from "@/registry/logos/twitch";
import * as TwitterLogoModule from "@/registry/logos/twitter";
import * as GitlabLogoModule from "@/registry/logos/gitlab";
import * as DiscordLogoModule from "@/registry/logos/discord";
import * as NotionLogoModule from "@/registry/logos/notion";
import * as GoogleLogoModule from "@/registry/logos/google";
import * as QwenLogoModule from "@/registry/logos/qwen";
import * as MoonshotAiLogoModule from "@/registry/logos/moonshot-ai";
import * as CohereLogoModule from "@/registry/logos/cohere";
import * as OpenaiLogoModule from "@/registry/logos/openai";
import * as AnthropicLogoModule from "@/registry/logos/anthropic";
import * as DeepseekLogoModule from "@/registry/logos/deepseek";
import * as HuggingFaceLogoModule from "@/registry/logos/hugging-face";
import * as GroqLogoModule from "@/registry/logos/groq";
import * as GrokLogoModule from "@/registry/logos/grok";
import * as GeminiLogoModule from "@/registry/logos/gemini";
import * as LovableLogoModule from "@/registry/logos/lovable";
import * as PerplexityLogoModule from "@/registry/logos/perplexity";
import * as XaiLogoModule from "@/registry/logos/xai";
import * as V0LogoModule from "@/registry/logos/v0";
import * as ClaudeLogoModule from "@/registry/logos/claude";
import * as MistralLogoModule from "@/registry/logos/mistral";
import * as MetaLogoModule from "@/registry/logos/meta";
import * as AwsLogoModule from "@/registry/logos/aws";
import * as KimiLogoModule from "@/registry/logos/kimi";
import * as SupabaseLogoModule from "@/registry/logos/supabase";
import * as StripeLogoModule from "@/registry/logos/stripe";
import * as ResendLogoModule from "@/registry/logos/resend";
import * as BetterAuthLogoModule from "@/registry/logos/better-auth";
import * as UpstashLogoModule from "@/registry/logos/upstash";
import * as VercelLogoModule from "@/registry/logos/vercel";
import * as CrafterStationLogoModule from "@/registry/logos/crafter-station";
import * as KeboLogoModule from "@/registry/logos/kebo";
import * as PolarLogoModule from "@/registry/logos/polar";
import * as TinteLogoModule from "@/registry/logos/tinte";
import * as ThemeSwitcherModule from "@/registry/theme/theme-switcher";
import * as ThemeSwitcherSwitchModule from "@/registry/theme/switch";
import * as ThemeSwitcherButtonModule from "@/registry/theme/button";
import * as ThemeSwitcherDropdownModule from "@/registry/theme/dropdown";
import * as ThemeSwitcherToggleModule from "@/registry/theme/toggle";
import * as ThemeSwitcherMultiButtonModule from "@/registry/theme/multi-button";
import * as TinteEditorModule from "@/registry/tinte/tinte-editor/components/tinte-editor";
import * as ClerkWaitlistShadcnModule from "@/registry/clerk/waitlist-shadcn/waitlist";
import * as ClerkSignInShadcnModule from "@/registry/clerk/sign-in-shadcn/sign-in";
import * as ClerkSignUpShadcnModule from "@/registry/clerk/sign-up-shadcn/sign-up";
import * as ClerkSignInSignalsModule from "@/registry/clerk/sign-in-signals/sign-in-signals";
import * as ClerkSignUpSignalsModule from "@/registry/clerk/sign-up-signals/sign-up-signals";

interface ComponentModule {
  default?: ComponentType<any>;
  [key: string]: any;
}

export const componentPreviewMap: Record<string, ComponentModule> = {
  "polar-sponsorship": PolarSponsorshipModule,
  "uploadthing-dropzone": UploadthingDropzoneModule,
  "uploadthing-button": UploadthingButtonModule,
  "apple-logo": AppleLogoModule,
  "linear-logo": LinearLogoModule,
  "microsoft-logo": MicrosoftLogoModule,
  "github-logo": GithubLogoModule,
  "spotify-logo": SpotifyLogoModule,
  "slack-logo": SlackLogoModule,
  "twitch-logo": TwitchLogoModule,
  "twitter-logo": TwitterLogoModule,
  "gitlab-logo": GitlabLogoModule,
  "discord-logo": DiscordLogoModule,
  "notion-logo": NotionLogoModule,
  "google-logo": GoogleLogoModule,
  "qwen-logo": QwenLogoModule,
  "moonshot-ai-logo": MoonshotAiLogoModule,
  "cohere-logo": CohereLogoModule,
  "openai-logo": OpenaiLogoModule,
  "anthropic-logo": AnthropicLogoModule,
  "deepseek-logo": DeepseekLogoModule,
  "hugging-face-logo": HuggingFaceLogoModule,
  "groq-logo": GroqLogoModule,
  "grok-logo": GrokLogoModule,
  "gemini-logo": GeminiLogoModule,
  "lovable-logo": LovableLogoModule,
  "perplexity-logo": PerplexityLogoModule,
  "xai-logo": XaiLogoModule,
  "v0-logo": V0LogoModule,
  "claude-logo": ClaudeLogoModule,
  "mistral-logo": MistralLogoModule,
  "meta-logo": MetaLogoModule,
  "aws-logo": AwsLogoModule,
  "kimi-logo": KimiLogoModule,
  "supabase-logo": SupabaseLogoModule,
  "stripe-logo": StripeLogoModule,
  "resend-logo": ResendLogoModule,
  "better-auth-logo": BetterAuthLogoModule,
  "upstash-logo": UpstashLogoModule,
  "vercel-logo": VercelLogoModule,
  "crafter-station-logo": CrafterStationLogoModule,
  "kebo-logo": KeboLogoModule,
  "polar-logo": PolarLogoModule,
  "tinte-logo": TinteLogoModule,
  "theme-switcher": ThemeSwitcherModule,
  "theme-switcher-switch": ThemeSwitcherSwitchModule,
  "theme-switcher-button": ThemeSwitcherButtonModule,
  "theme-switcher-dropdown": ThemeSwitcherDropdownModule,
  "theme-switcher-toggle": ThemeSwitcherToggleModule,
  "theme-switcher-multi-button": ThemeSwitcherMultiButtonModule,
  "tinte-editor": TinteEditorModule,
  "clerk-waitlist-shadcn": ClerkWaitlistShadcnModule,
  "clerk-sign-in-shadcn": ClerkSignInShadcnModule,
  "clerk-sign-up-shadcn": ClerkSignUpShadcnModule,
  "clerk-sign-in-signals": ClerkSignInSignalsModule,
  "clerk-sign-up-signals": ClerkSignUpSignalsModule,
};

/**
 * Get a component from the preview map.
 * Extracts the default export or first named component export.
 */
export function getPreviewComponent(name: string): ComponentType<any> | null {
  const module = componentPreviewMap[name];

  if (!module) {
    return null;
  }

  // Try default export first
  if (module.default) {
    return module.default;
  }

  // Find first function export (component)
  for (const [key, value] of Object.entries(module)) {
    if (typeof value === "function" && key !== "default") {
      return value as ComponentType<any>;
    }
  }

  return null;
}

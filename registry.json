{
  "$schema": "https://ui.shadcn.com/schema/registry.json",
  "name": "elements",
  "homepage": "https://tryelements.dev",
  "items": [
    {
      "name": "clerk-waitlist",
      "type": "registry:block",
      "title": "Clerk Waitlist",
      "description": "An animated waitlist signup form with Clerk integration",
      "registryDependencies": ["button", "input", "label"],
      "dependencies": ["motion", "@clerk/backend", "@clerk/nextjs"],
      "files": [
        {
          "path": "registry/default/elements/clerk/waitlist/waitlist.tsx",
          "type": "registry:component",
          "target": "components/elements/clerk/waitlist/waitlist.tsx"
        },
        {
          "path": "registry/default/elements/clerk/waitlist/actions.ts",
          "type": "registry:lib",
          "target": "components/elements/clerk/waitlist/actions.ts"
        },
        {
          "path": "registry/default/elements/clerk/waitlist/page.tsx",
          "type": "registry:page",
          "target": "app/elements/clerk/waitlist/page.tsx"
        }
      ],
      "envVars": {
        "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY": "pk_test_",
        "CLERK_SECRET_KEY": "sk_test_"
      },
      "docs": "To get your Clerk API keys:\n\n1. Create an account at https://clerk.com\n2. Create a new application\n3. Go to Configure > API Keys\n4. Copy the Publishable Key and Secret Key\n5. Add them to your .env.local file\n6. Go to Configure > Restrictions > Sign-up mode and enable Waitlist\n\nThe waitlist component uses Clerk's waitlist feature to collect email signups with built-in validation and duplicate prevention."
    },
    {
      "name": "clerk-sign-in",
      "type": "registry:ui",
      "title": "Clerk Sign In",
      "description": "Complete sign-in form with Clerk integration",
      "registryDependencies": [
        "button",
        "input",
        "label",
        "alert",
        "card",
        "avatar"
      ],
      "dependencies": ["@clerk/nextjs", "lucide-react"],
      "files": [
        {
          "path": "registry/default/elements/clerk/sign-in.tsx",
          "type": "registry:component",
          "target": "components/elements/clerk/sign-in.tsx"
        },
        {
          "path": "registry/default/elements/clerk/sign-in/page.tsx",
          "type": "registry:page",
          "target": "app/elements/clerk/sign-in/page.tsx"
        },
        {
          "path": "registry/default/elements/clerk/dashboard/page.tsx",
          "type": "registry:page",
          "target": "app/elements/clerk/dashboard/page.tsx"
        }
      ],
      "envVars": {
        "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY": "pk_test_",
        "CLERK_SECRET_KEY": "sk_test_"
      },
      "docs": "Production-ready sign-in component with email/password authentication, error handling, and proper validation. Includes password visibility toggle and loading states."
    },
    {
      "name": "clerk-sign-up",
      "type": "registry:ui",
      "title": "Clerk Sign Up",
      "description": "Complete sign-up form with Clerk integration and CAPTCHA support",
      "registryDependencies": ["button", "input", "label", "alert"],
      "dependencies": ["@clerk/nextjs", "lucide-react"],
      "files": [
        {
          "path": "registry/default/elements/clerk/sign-up.tsx",
          "type": "registry:component",
          "target": "components/elements/clerk/sign-up.tsx"
        },
        {
          "path": "registry/default/elements/clerk/sign-up/page.tsx",
          "type": "registry:page",
          "target": "app/elements/clerk/sign-up/page.tsx"
        },
        {
          "path": "registry/default/elements/clerk/dashboard/page.tsx",
          "type": "registry:page",
          "target": "app/elements/clerk/dashboard/page.tsx"
        }
      ],
      "envVars": {
        "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY": "pk_test_",
        "CLERK_SECRET_KEY": "sk_test_"
      },
      "docs": "Production-ready sign-up component with first name, last name, email, and password fields. Includes email verification flow, CAPTCHA support for bot protection, and comprehensive error handling."
    },
    {
      "name": "theme-switcher",
      "type": "registry:ui",
      "title": "Theme Switcher",
      "description": "A theme switcher component with animated sun/moon icons",
      "registryDependencies": ["switch"],
      "dependencies": ["next-themes"],
      "files": [
        {
          "path": "registry/default/elements/theme-switcher/theme-switcher.tsx",
          "type": "registry:component",
          "target": "components/elements/theme-switcher.tsx"
        },
        {
          "path": "registry/default/elements/theme-switcher/page.tsx",
          "type": "registry:page",
          "target": "app/elements/theme-switcher/page.tsx"
        }
      ],
      "docs": "To use this component:\n\n1. Install next-themes: npm install next-themes\n2. Wrap your app with ThemeProvider from next-themes\n3. Set up your CSS variables for light/dark themes\n\nThe theme switcher automatically handles light/dark mode with smooth transitions and animated icons."
    }
  ]
}

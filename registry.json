{
  "$schema": "https://ui.shadcn.com/schema/registry.json",
  "name": "elements",
  "homepage": "https://tryelements.dev",
  "items": [
    {
      "name": "clerk-waitlist",
      "type": "registry:block",
      "title": "Clerk Waitlist",
      "description": "An animated waitlist signup form with Clerk integration",
      "registryDependencies": ["button", "input", "label"],
      "dependencies": ["motion", "@clerk/backend", "@clerk/nextjs"],
      "files": [
        {
          "path": "registry/default/elements/clerk/waitlist/waitlist.tsx",
          "type": "registry:component",
          "target": "components/elements/clerk/waitlist/waitlist.tsx"
        },
        {
          "path": "registry/default/elements/clerk/waitlist/actions.ts",
          "type": "registry:lib",
          "target": "components/elements/clerk/waitlist/actions.ts"
        },
        {
          "path": "registry/default/elements/clerk/waitlist/page.tsx",
          "type": "registry:page",
          "target": "app/elements/clerk/waitlist/page.tsx"
        }
      ],
      "envVars": {
        "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY": "pk_test_",
        "CLERK_SECRET_KEY": "sk_test_"
      },
      "docs": "To get your Clerk API keys:\n\n1. Create an account at https://clerk.com\n2. Create a new application\n3. Go to Configure > API Keys\n4. Copy the Publishable Key and Secret Key\n5. Add them to your .env.local file\n6. Go to Configure > Restrictions > Sign-up mode and enable Waitlist\n\n**Setup:** Wrap your app with ClerkProvider in your root layout:\n\n```tsx\n// app/layout.tsx\nimport { ClerkProvider } from '@clerk/nextjs'\n\nexport default function RootLayout({ children }) {\n  return (\n    <ClerkProvider>\n      <html>\n        <body>{children}</body>\n      </html>\n    </ClerkProvider>\n  )\n}\n```\n\nThe waitlist component uses Clerk's waitlist feature to collect email signups with built-in validation and duplicate prevention."
    },
    {
      "name": "clerk-sign-in",
      "type": "registry:ui",
      "title": "Clerk Sign In",
      "description": "Complete sign-in form with Clerk integration",
      "registryDependencies": [
        "button",
        "input",
        "label",
        "alert",
        "card",
        "avatar",
        "@elements/apple-logo",
        "@elements/linear-logo",
        "@elements/microsoft-logo",
        "@elements/github-logo",
        "@elements/spotify-logo",
        "@elements/slack-logo",
        "@elements/twitch-logo",
        "@elements/twitter-logo",
        "@elements/gitlab-logo",
        "@elements/discord-logo",
        "@elements/notion-logo",
        "@elements/google-logo",
        "@elements/clerk-middleware"
      ],
      "dependencies": ["@clerk/nextjs", "@clerk/types"],
      "files": [
        {
          "path": "registry/default/elements/clerk/sign-in.tsx",
          "type": "registry:component",
          "target": "components/elements/clerk/sign-in.tsx"
        },
        {
          "path": "registry/default/elements/clerk/sign-in/page.tsx",
          "type": "registry:page",
          "target": "app/elements/clerk/sign-in/page.tsx"
        },
        {
          "path": "registry/default/elements/clerk/dashboard/page.tsx",
          "type": "registry:page",
          "target": "app/elements/clerk/dashboard/page.tsx"
        },
        {
          "path": "registry/default/elements/clerk/sso-callback/page.tsx",
          "type": "registry:page",
          "target": "app/elements/clerk/sso-callback/page.tsx"
        }
      ],
      "envVars": {
        "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY": "pk_test_",
        "CLERK_SECRET_KEY": "sk_test_"
      },
      "docs": "Production-ready sign-in component with dynamic identifier detection, OAuth social providers, MFA support, and comprehensive error handling. Requires ClerkProvider in your root layout."
    },
    {
      "name": "clerk-sign-up",
      "type": "registry:ui",
      "title": "Clerk Sign Up",
      "description": "Complete sign-up form with Clerk integration and CAPTCHA support",
      "registryDependencies": [
        "button",
        "input",
        "label",
        "alert",
        "@elements/apple-logo",
        "@elements/linear-logo",
        "@elements/microsoft-logo",
        "@elements/github-logo",
        "@elements/spotify-logo",
        "@elements/slack-logo",
        "@elements/twitch-logo",
        "@elements/twitter-logo",
        "@elements/gitlab-logo",
        "@elements/discord-logo",
        "@elements/notion-logo",
        "@elements/google-logo",
        "@elements/clerk-middleware"
      ],
      "dependencies": ["@clerk/nextjs", "@clerk/types"],
      "files": [
        {
          "path": "registry/default/elements/clerk/sign-up.tsx",
          "type": "registry:component",
          "target": "components/elements/clerk/sign-up.tsx"
        },
        {
          "path": "registry/default/elements/clerk/sign-up/page.tsx",
          "type": "registry:page",
          "target": "app/elements/clerk/sign-up/page.tsx"
        },
        {
          "path": "registry/default/elements/clerk/dashboard/page.tsx",
          "type": "registry:page",
          "target": "app/elements/clerk/dashboard/page.tsx"
        },
        {
          "path": "registry/default/elements/clerk/sso-callback/page.tsx",
          "type": "registry:page",
          "target": "app/elements/clerk/sso-callback/page.tsx"
        }
      ],
      "envVars": {
        "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY": "pk_test_",
        "CLERK_SECRET_KEY": "sk_test_"
      },
      "docs": "Production-ready sign-up component with dynamic field rendering based on Clerk configuration, OAuth social providers, email verification flow, dynamic verification methods, waitlist mode detection, session tasks handling, and comprehensive error handling with proper ClerkAPIError patterns.\\n\\n**Setup:** Wrap your app with ClerkProvider in your root layout:\\n\\n```tsx\\n// app/layout.tsx\\nimport { ClerkProvider } from '@clerk/nextjs'\\n\\nexport default function RootLayout({ children }) {\\n  return (\\n    <ClerkProvider>\\n      <html>\\n        <body>{children}</body>\\n      </html>\\n    </ClerkProvider>\\n  )\\n}\\n```"
    },
    {
      "name": "theme-switcher",
      "type": "registry:ui",
      "title": "Theme Switcher",
      "description": "A theme switcher component with animated sun/moon icons",
      "registryDependencies": ["switch"],
      "dependencies": ["next-themes"],
      "files": [
        {
          "path": "registry/default/elements/theme-switcher/theme-switcher.tsx",
          "type": "registry:component",
          "target": "components/elements/theme-switcher.tsx"
        },
        {
          "path": "registry/default/elements/theme-switcher/page.tsx",
          "type": "registry:page",
          "target": "app/elements/theme-switcher/page.tsx"
        }
      ],
      "docs": "To use this component:\n\n1. Install next-themes: npm install next-themes\n2. Wrap your app with ThemeProvider from next-themes\n3. Set up your CSS variables for light/dark themes\n\nThe theme switcher automatically handles light/dark mode with smooth transitions and animated icons."
    },
    {
      "name": "apple-logo",
      "type": "registry:ui",
      "title": "Apple Logo",
      "description": "Apple logo component with theme-adaptive colors",
      "registryDependencies": [],
      "dependencies": [],
      "files": [
        {
          "path": "registry/default/logos/apple.tsx",
          "type": "registry:component",
          "target": "components/ui/logos/apple.tsx"
        }
      ],
      "categories": ["logo", "brand"],
      "docs": "Apple logo component that adapts to your theme. Uses currentColor to match your design system."
    },
    {
      "name": "linear-logo",
      "type": "registry:ui",
      "title": "Linear Logo",
      "description": "Linear logo component with brand purple gradient",
      "registryDependencies": [],
      "dependencies": [],
      "files": [
        {
          "path": "registry/default/logos/linear.tsx",
          "type": "registry:component",
          "target": "components/ui/logos/linear.tsx"
        }
      ],
      "categories": ["logo", "brand"],
      "docs": "Linear logo component with official brand colors and gradient."
    },
    {
      "name": "microsoft-logo",
      "type": "registry:ui",
      "title": "Microsoft Logo",
      "description": "Microsoft logo component with brand colors",
      "registryDependencies": [],
      "dependencies": [],
      "files": [
        {
          "path": "registry/default/logos/microsoft.tsx",
          "type": "registry:component",
          "target": "components/ui/logos/microsoft.tsx"
        }
      ],
      "categories": ["logo", "brand"],
      "docs": "Microsoft logo component with official four-square brand colors."
    },
    {
      "name": "github-logo",
      "type": "registry:ui",
      "title": "GitHub Logo",
      "description": "GitHub logo component with theme-adaptive colors",
      "registryDependencies": [],
      "dependencies": [],
      "files": [
        {
          "path": "registry/default/logos/github.tsx",
          "type": "registry:component",
          "target": "components/ui/logos/github.tsx"
        }
      ],
      "categories": ["logo", "brand"],
      "docs": "GitHub logo component that adapts to your theme. Uses currentColor to match your design system."
    },
    {
      "name": "spotify-logo",
      "type": "registry:ui",
      "title": "Spotify Logo",
      "description": "Spotify logo component with brand green",
      "registryDependencies": [],
      "dependencies": [],
      "files": [
        {
          "path": "registry/default/logos/spotify.tsx",
          "type": "registry:component",
          "target": "components/ui/logos/spotify.tsx"
        }
      ],
      "categories": ["logo", "brand"],
      "docs": "Spotify logo component with official brand green color."
    },
    {
      "name": "slack-logo",
      "type": "registry:ui",
      "title": "Slack Logo",
      "description": "Slack logo component with brand colors",
      "registryDependencies": [],
      "dependencies": [],
      "files": [
        {
          "path": "registry/default/logos/slack.tsx",
          "type": "registry:component",
          "target": "components/ui/logos/slack.tsx"
        }
      ],
      "categories": ["logo", "brand"],
      "docs": "Slack logo component with official multi-color brand design."
    },
    {
      "name": "twitch-logo",
      "type": "registry:ui",
      "title": "Twitch Logo",
      "description": "Twitch logo component with brand purple",
      "registryDependencies": [],
      "dependencies": [],
      "files": [
        {
          "path": "registry/default/logos/twitch.tsx",
          "type": "registry:component",
          "target": "components/ui/logos/twitch.tsx"
        }
      ],
      "categories": ["logo", "brand"],
      "docs": "Twitch logo component with official brand purple and white colors."
    },
    {
      "name": "twitter-logo",
      "type": "registry:ui",
      "title": "Twitter/X Logo",
      "description": "Twitter (X) logo component with theme-adaptive colors",
      "registryDependencies": [],
      "dependencies": [],
      "files": [
        {
          "path": "registry/default/logos/twitter.tsx",
          "type": "registry:component",
          "target": "components/ui/logos/twitter.tsx"
        }
      ],
      "categories": ["logo", "brand"],
      "docs": "Twitter/X logo component that adapts to your theme. Uses currentColor to match your design system."
    },
    {
      "name": "gitlab-logo",
      "type": "registry:ui",
      "title": "GitLab Logo",
      "description": "GitLab logo component with brand colors",
      "registryDependencies": [],
      "dependencies": [],
      "files": [
        {
          "path": "registry/default/logos/gitlab.tsx",
          "type": "registry:component",
          "target": "components/ui/logos/gitlab.tsx"
        }
      ],
      "categories": ["logo", "brand"],
      "docs": "GitLab logo component with official tanuki mascot brand colors."
    },
    {
      "name": "discord-logo",
      "type": "registry:ui",
      "title": "Discord Logo",
      "description": "Discord logo component with brand purple",
      "registryDependencies": [],
      "dependencies": [],
      "files": [
        {
          "path": "registry/default/logos/discord.tsx",
          "type": "registry:component",
          "target": "components/ui/logos/discord.tsx"
        }
      ],
      "categories": ["logo", "brand"],
      "docs": "Discord logo component with official brand blurple color."
    },
    {
      "name": "notion-logo",
      "type": "registry:ui",
      "title": "Notion Logo",
      "description": "Notion logo component with theme-adaptive colors",
      "registryDependencies": [],
      "dependencies": [],
      "files": [
        {
          "path": "registry/default/logos/notion.tsx",
          "type": "registry:component",
          "target": "components/ui/logos/notion.tsx"
        }
      ],
      "categories": ["logo", "brand"],
      "docs": "Notion logo component with white background and theme-adaptive foreground."
    },
    {
      "name": "google-logo",
      "type": "registry:ui",
      "title": "Google Logo",
      "description": "Google logo component with brand colors",
      "registryDependencies": [],
      "dependencies": [],
      "files": [
        {
          "path": "registry/default/logos/google.tsx",
          "type": "registry:component",
          "target": "components/ui/logos/google.tsx"
        }
      ],
      "categories": ["logo", "brand"],
      "docs": "Google logo component with official four-color brand design."
    },
    {
      "name": "clerk-middleware",
      "type": "registry:ui",
      "title": "Clerk Middleware",
      "description": "Clerk middleware for Next.js App Router with route protection",
      "registryDependencies": [],
      "dependencies": ["@clerk/nextjs"],
      "files": [
        {
          "path": "registry/default/elements/clerk/middleware.ts",
          "type": "registry:lib",
          "target": "middleware.ts"
        }
      ],
      "envVars": {
        "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY": "pk_test_",
        "CLERK_SECRET_KEY": "sk_test_"
      },
      "docs": "Clerk middleware for Next.js App Router that handles authentication and route protection. Install this alongside clerk-sign-in or clerk-sign-up components.\n\n**Setup:** This middleware automatically protects your routes and should be installed in the root of your project as middleware.ts."
    }
  ]
}
